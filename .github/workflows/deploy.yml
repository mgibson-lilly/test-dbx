name: Deploy to Databricks

on:
  workflow_dispatch:

jobs:
  deploy-job:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Install Databricks CLI
      run: |
        curl -fsSL https://raw.githubusercontent.com/databricks/setup-cli/main/install.sh | sh
    - name: Create or Update Databricks Job
      env:
        DATABRICKS_HOST: ${{ secrets.DATABRICKS_HOST }}
        DATABRICKS_TOKEN: ${{ secrets.DATABRICKS_TOKEN }}
      run: |
        # We'll attempt to create a job from the JSON definition.
        # If a job with the same name exists, consider "databricks jobs reset" or "databricks jobs update".
        # 1) Check if job already exists by name
        JOB_NAME=$(jq -r '.name' job-config/job_def.json)
        JOB_ID=$(databricks jobs list --output JSON | jq -r ".[] | select(.settings.name == \"${JOB_NAME}\") | .job_id" || true)
      
        if [ -z "$JOB_ID" ] || [ "$JOB_ID" == "null" ]; then
          echo "Job does not exist. Creating new job..."
          databricks jobs create --json job-config/job_def.json
        else
          echo "Job exists with ID: $JOB_ID. Updating job..."
          databricks jobs reset --job-id "$JOB_ID" --json job-config/job_def.json
        fi
